modelDescription {
  baseDir = "/tmp"
  baseDir = ${?MODELDESCRIPTION_BASEDIR}

  modelName = "ssd_inception_v2_coco_2018_01_28"
  modelName = ${?MODELDESCRIPTION_MODELNAME}

  baseUrl = "http://download.tensorflow.org/models/object_detection/"
  baseUrl = ${?MODELDESCRIPTION_BASEURL}

  modelUrl = ${modelDescription.baseUrl}${modelDescription.modelName}".tar.gz"
  defaultModelPath = ${modelDescription.baseDir}/${modelDescription.modelName}

  mapFilename = "mscoco_label_map.pbtxt"
  mapFilename = ${?MODELDESCRIPTION_MAPFILENAME}

  mapBaseUrl = "https://raw.githubusercontent.com/tensorflow/models/master/research/object_detection/data/"
  mapBaseUrl = ${?MODELDESCRIPTION_MAPBASEURL}
  labelMapUrl = ${modelDescription.mapBaseUrl}${modelDescription.mapFilename}

  inferenceGraphPath = ${modelDescription.baseDir}/${modelDescription.modelName}"/frozen_inference_graph.pb"
  labelMapPath = ${modelDescription.baseDir}/${modelDescription.modelName}"/mscoco_label_map.pbtxt"
}

sourceDescription {
  cameraSource = "0:none"

  cameraConfig {
    format = "avfoundation"
    height = 720
    width = 1280
    frameRate = 30.0
  }
}

akka {
  log-dead-letters = 0
  jvm-exit-on-fatal-error = false
  log-dead-letters-during-shutdown = off
  loglevel = "DEBUG"
  actor {
    debug {
      fsm = on
      receive = on
      lifecycle = on
      autoreceive = on
    }
  }
}

akka.actor.default-mailbox.mailbox-type = "de.aktey.akka.visualmailbox.VisualMailboxType"
de.aktey.akka.visualmailbox {
  server {
    address {
      host: "localhost"
      port: 60009
    }
  }
}
de.aktey.akka.visualmailbox {
  web.server {
    address {
      host: "localhost"
      port: 8080
    }
  }
}